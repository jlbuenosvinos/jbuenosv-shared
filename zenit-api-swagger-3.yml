openapi: 3.0.0
info:
  title: Zenit Event Collect API
  version: 1.1.0
  description: This API offers a way to send events to the Zenit Collector
  contact:
    email: oscarfvar@inditex.com
tags:
  - name: Page
  - name: Cart
  - name: Purchase
  - name: Event
servers:
  - url: https://fep8-std-zaraphr.inditex.com
    description: Zara FEP8 Server
  - url: https://dyn-bershkaphr.inditex.com
    description: Bershka prustg server
  - url: https://dyn-stradivariusphr.inditex.com
    description: Stradivarius prustg server
  - url: https://dyn-pullandbearphr.inditex.com
    description: Pull and Bear prustg server
  - url: https://dyn-oyshophr.inditex.com
    description: Oysho prustg server
  - url: https://dyn-leftiesphr.inditex.com
    description: Lefties prustg server
  - url: https://dyn-massimoduttiphr.inditex.com
    description: Massimo Dutti prustg server
  - url: https://www.zara.com
    description: Zara Production Server
  - url: https://www.bershka.com/
    description: Bershka Production Server
  - url: https://www.stradivarius.com
    description: Stradivarius Production Server
  - url: https://www.pullandbear.com/
    description:  Pull and Bear Production Server
  - url: https://www.oysho.com
    description: Oysho Production Server
  - url: https://www.lefties.com/
    description: Lefties Production Server
  - url: https://www.massimodutti.com/
    description: Massimo Dutti Production Server
paths:
  /integration/zenit/events/hit:
    post:
      summary: Send information event related to a page hit
      description: This endpoint is used to send user page hit events to Zenit
      tags:
        - Page
        - Event
      requestBody:
        description: Contains the event describing the page hit user action
        required: true
        content:
          application/vnd.kafka.json.v2+json:
            schema:
              type: object
              required:
                - records
              properties:
                records:
                  type: array
                  items:
                    type: object
                    required:
                      - value
                    properties:
                      value:
                        allOf:
                          - $ref: '#/components/schemas/page-hit-event'
                        discriminator:
                          propertyName: version
                          mapping:
                            '1': '#/components/schemas/page-hit-event'
      responses:
        '200':
          $ref: '#/components/responses/ok'
        '406':
          $ref: '#/components/responses/not-acceptable-error'
        '415':
          $ref: '#/components/responses/unsupported-media-error'
        '500':
          $ref: '#/components/responses/internal-error'
  /integration/zenit/events/purchase-confirmed:
    post:
      summary: Send information event related to a confirmed purchase
      description: Send
      tags:
        - Purchase
        - Event
      requestBody:
        description: Contains the event describing the purchase completed user action
        required: true
        content:
          application/vnd.kafka.json.v2+json:
            schema:
              type: object
              required:
                - records
              properties:
                records:
                  type: array
                  items:
                    type: object
                    required:
                      - value
                    properties:
                      value:
                        allOf:
                          - $ref: '#/components/schemas/purchase-confirmed-event'
                        discriminator:
                          propertyName: version
                          mapping:
                            '1': '#/components/schemas/purchase-confirmed-event'
      responses:
        '200':
          $ref: '#/components/responses/ok'
        '406':
          $ref: '#/components/responses/not-acceptable-error'
        '415':
          $ref: '#/components/responses/unsupported-media-error'
        '500':
          $ref: '#/components/responses/internal-error'
  /integration/zenit/events/add-to-cart:
    post:
      summary: Send information event related to a add to cart user action
      description: This endpoint is used to send user add to cart action events to Zenit
      tags:
        - Cart
        - Event
      requestBody:
        description: Contains the event describing the page hit user action
        required: true
        content:
          application/vnd.kafka.json.v2+json:
            schema:
              type: object
              required:
                - records
              properties:
                records:
                  type: array
                  items:
                    type: object
                    required:
                      - value
                    properties:
                      value:
                        allOf:
                          - $ref: '#/components/schemas/add-to-cart-event'
                        discriminator:
                          propertyName: version
                          mapping:
                            '1': '#/components/schemas/add-to-cart-event'
      responses:
        '200':
          $ref: '#/components/responses/ok'
        '406':
          $ref: '#/components/responses/not-acceptable-error'
        '415':
          $ref: '#/components/responses/unsupported-media-error'
        '500':
          $ref: '#/components/responses/internal-error'
components:
  schemas:
    basic-event:
      type: object
      description: Common fields in different events
      required:
        - device
        - tenant
        - user-agent
        - version
      properties:
        device:
          $ref: '#/components/schemas/device'
        extra:
           $ref: '#/components/schemas/extra-event'
        geo:
          $ref: '#/components/schemas/geo'
        tenant:
          type: string
          description: 'Brand of the event. Must be one of: za, zh, md, oy, bk, pb, lf, st'
          enum:
            - za
            - zh
            - md
            - oy
            - bk
            - pb
            - lf
            - st
        utm:
          $ref: '#/components/schemas/utm'
        user-agent:
          $ref: '#/components/schemas/user-agent'
        version:
          type: number
          description: Version of the event
          enum:
            - 1
    extra-event:
      type: object
      description: Dictionary of objects containing extra information about the event.
      additionalProperties: true      
      properties:
        searchPerformance:
           $ref: '#/components/schemas/search-performance'
    search-performance:
        type: object
        description: Generated every time a search request is executed to the search provider. 
                     It will contain information of a technical nature to be able to evaluate the status and operation of the service.
                     This extra is optional and it should be included whenever PageHit has pageType SEARCH_REQUEST value
        required:
         - searchRequestMethodName
         - searchRequestHTTPResponseCode
         - searchRequestResponseTime
         - searchRequestResultsNum
        additionalProperties: true       
        properties:
          searchRequestMethodName: 
            description: search provider invoked method name 
            enum: 
              - search
              - query
            type: string
          searchRequestHTTPResponseCode:   
            description: HTTP response code
            type: number
          searchRequestResponseTime:
            description: search request response time in milliseconds from its invocation
            type: number
          searchRequestResultsNum:
            description: number of results returned by search provider
            type: number    
        example: 
            searchRequestMethodName: "search"
            searchRequestHTTPResponseCode: 200
            searchRequestResponseTime: 300.7 
            searchRequestResultsNum: 25
    purchase-confirmed-event:
      allOf:
        - $ref: '#/components/schemas/basic-event'
        - $ref: '#/components/schemas/extra-purchase-confirmed-event'
    extra-purchase-confirmed-event:
      type: object
      required:
        - eventName
        - payload
      properties:
        eventName:
          type: string
          description: Type of the event. Must be PurchaseConfirmed
          enum:
            - PurchaseConfirmed
          example: 
            PurchaseConfirmed
        payload:
          type: object
          description: Content of the event, information associated with the event
          allOf:
            - $ref: '#/components/schemas/base-payload'
          properties:
            context:
              $ref: '#/components/schemas/purchase-confirmed-context'
          example: # This example should not be here and context should be inherited from the schema but is not working
            sessionId: fc5e744947b24435cc22ca84a38a15fb
            timestamp: 1643724716694
            context:
              cartId: XS4wHC9N5b/2lGwf8XEaCq+iF7Nui7I0Kw+Ty/uxxUA=
              currency: EUR
              displayLanguage: es
              items:
                - amount: 784
                  articleBrandCode: 0
                  price: 395
                  sku: '0807324080005-I2021'
                  units: 2
              storeId: 10701
    page-hit-event:
      allOf:
        - $ref: '#/components/schemas/basic-event'
        - $ref: '#/components/schemas/extra-page-hit-event'
    extra-page-hit-event:
      type: object
      required:
        - eventName
        - payload
      properties:
        eventName:
          type: string
          description: Type of the event. Must be PageHit
          enum:
            - PageHit
          example:
            PageHit
        payload:
          type: object
          description: Content of the event, information associated with the event
          allOf:
            - $ref: '#/components/schemas/base-payload'
          properties:
            context:
              $ref: '#/components/schemas/page-hit-context'
          example: # This example should not be here and context should be inherited from the schema but is not working
            sessionId: fc5e744947b24435cc22ca84a38a15fb
            timestamp: 1643724716694
            context:
              section: MAN
              categoryId: 2112866
              catentryId: 183602337
              displayLanguage: en
              pageType: PRODUCT_DETAILS
              list: search-results
              listPostion: 3
              origin: manual
              storeId: 10706

    add-to-cart-event:
      allOf:
        - $ref: '#/components/schemas/basic-event'
        - $ref: '#/components/schemas/extra-add-to-cart-event'
    extra-add-to-cart-event:
      type: object
      required:
        - eventName
        - payload
      properties:
        eventName:
          type: string
          description: Type of the event. Must be AddToCart
          enum:
            - AddToCart
        payload:
          type: object
          description: Content of the event, information associated with the event
          required:
            - context
          allOf:
            - $ref: '#/components/schemas/base-payload'
          properties:
            context:
              $ref: '#/components/schemas/add-to-cart-context'
          example: # This example should not be here and context should be inherited from the schema but is not working
            sessionId: fc5e744947b24435cc22ca84a38a15fb
            timestamp: 1643724716694
            context: 
              cartId: CCLRuXqH5dYiVRA+4fAVJP5qrzuECm0lNWLFgTziRdU=
              categoryId: 1886352
              catentryId: 108953403
              section: MAN
              displayLanguage: en
              list: search-results
              listPosition: 3
              origin: size-recommender
              pageType: PRODUCT_DETAILS
              skus:
                - 0651831080002-I2021
              storeId: 10706
    device:
      type: object
      required:
        - type
      description: User device information sent with the event
      properties:
        language:
          type: string
          description: >-
            Locale style ISO-639 Language Code followed by ISO-3166 Country
            Code, examples: es_ES, es_MX
        name:
          type: string
          description: 'Device name, examples: iPhone X, samsung SM-G991B'
        os:
          type: string
          enum:
            - android
            - ios
            - ipados
            - linux
            - mac
            - windows
          description: >-
            Device Operating System name if available, possible values: android,
            ios, ipados, linux, mac, windows
        osVersion:
          type: string
          description: 'Device OS version, examples: 15.4.1, 9'
        type:
          type: string
          enum:
            - mobile
            - desktop
            - tablet
      example:
        language: en_IN
        name: iPhone X
        os: ios
        osVersion: '15.1'
        type: mobile
    user-agent:
      type: object
      required:
        - appName
        - appVersion
        - platform
      description: User agent detailed information
      properties:
        appName:
          type: string
          description: >-
            Name of the application that is sending the request. Examples:
            com.inditex.zara.iphone
        appVersion:
          type: string
          description: >-
            Version of the application that is sending the request. Examples:
            11.17.2, 1.266.0-b.10
        platform:
          type: string
          enum:
            - web
            - app
          description: 'Platform that is sending the request. Possible values: web, app'
      example:
        appName: com.inditex.zara.iphone
        appVersion: 9.8.5
        platform: app
    base-payload:
      type: object
      description: Common payload of any event type, information associated with the event
      required:
        - sessionId
        - timestamp
      properties:
        sessionId:
          type: string
          description: >-
            Unique identifier of a user session. Must be the same during a
            complete interaction of an user and keep the same value in all kind
            of events. This is the ITXSESSIONID
        timestamp:
          type: integer
          description: UNIX Epoch in milliseconds when the event occurred in local time
      example:
        sessionId: fc5e744947b24435cc22ca84a38a15fb
        timestamp: 1643724716694
    item:
      type: object
      description: Product purchased data
      required:
        - amount
        - articleBrandCode
        - price
        - sku
        - units
      properties:
        amount:
          type: number
          description: >-
            Total amount charged for this product in local currency, store
            currency
        articleBrandCode:
          type: number
          description: Code of the brand that is selling this product
        price:
          type: number
          description: Unitary price of the product
        sku:
          type: string
          description: 'SKU including campaign. This is MOCACOTA. Example: 0807324080005-I2021'
        units:
          type: number
          description: Number of units purchased
      example:
        amount: 784
        articleBrandCode: 0
        price: 395
        sku: '0807324080005-I2021'
        units: 2
    geo:
      type: object
      required:
        - country
      properties:
        country:
          type: string
          description: 'ISO-3166 Country Code, examples: ES, US'
        region:
          type: string
          description: 'ISO-3166-2 Region Codes, examples: CN, NY'
        regionGroupId:
          type: number
          description: Commercial region grouping identification
      example:
        country: US
        region: NY
    utm:
      type: object
      required:
        - source
      properties:
        source:
          type: string
          description: >-
            Kind of channel. Social, Organic, Paid, Email, Affiliates, are all
            core marketing channels that include multiple traffic sources.
        medium:
          type: string
          description: >-
            individual site within that channel. For example, Facebook would be
            one of the sources within your Social medium for any unpaid links
            that you post to Facebook. If you’re running a Facebook ad or
            spending money to promote a link, you’d want to label Facebook as a
            source within Paid. 
        campaign:
          type: string
          description: >-
            The specific campaign that you’re running. Feel free to fill this in
            however it makes sense to you. Names that allow you to easily
            identify product launches, promotional campaigns, individual emails
            or posts, etc. are all good.
        term:
          type: string
          description: Used to track specific keywords for paid organic campaigns
        content:
          type: string
          description: >-
            This is an optional field. If you have multiple links in the same
            campaign, like two links in the same email, you can fill in this
            value so you can differentiate them.
      example:
        source: google.com
        medium: cpc
        campaign: sales-v2022
        term: jeans
        content: banner
    purchase-confirmed-context:
      type: object
      required:
        - items
        - storeId
      properties:
        cartId:
          type: string
          description: >- 
            CartId that was purchased. This is the userId. Example: XS4wHC9N5b/2lGwf8XEaCq+iF7Nui7I0Kw+Ty/uxxUA=
        currency:
          type: string
          description: >-
            ISO4217 Currency codes. Examples: EUR, USD
        displayLanguage:
          type: string
          description: >-
            Locale style ISO-639 Language Code followed by ISO-3166 Country
            Code, examples: es_ES, es_MX
        items:
          description: Set of items purchased
          type: array
          items:
            $ref: '#/components/schemas/item'
        storeId:
          type: number
      example:
        cartId: XS4wHC9N5b/2lGwf8XEaCq+iF7Nui7I0Kw+Ty/uxxUA=
        currency: EUR
        displayLanguage: es
        items:
          - amount: 784
            articleBrandCode: 0
            price: 395
            sku: '0807324080005-I2021'
            units: 2
        storeId: 10701
    page-hit-context:
      type: object
      required:
        - categoryId
        - catentryId
        - pageType
        - storeId
      properties:
        section:
          type: string
          nullable: true
          description: Type of section that user is accessing. Must be one of the enum list
          enum: 
            - MAN 
            - WOMAN
            - KIDS
            - BEAUTY
        categoryId:
          type: number
          nullable: true
        catentryId:
          type: number
          nullable: true
          description: Unique identifier of the product entry in a category
        displayLanguage:
          type: string
          description: >-
            Locale style ISO-639 Language Code followed by ISO-3166 Country
            Code, examples: es_ES, es_MX
        origin:
          type: string
          nullable: true
          description: >-
            Which part of the interface was the origin of this search results page. This property should be populated for pagehit events with pagetype=PRODUCT_SEARCH_RESULTS. Must be one of the enum list.
          enum:
             - manual
             - autocomplete
             - top-queries
             - related-tags
             - previous-queries
             - next-queries
             - no-results-fallback
             - alternative-queries
        list:
          type: string
          nullable: true
          description: >-
            Which list was the origin of a selected search result. This property should be populated when reaching a PRODUCT_DETAILS page from a search list. Must be one of the enum list.
          enum:
             - search-results 
             - suggested-product 
             - no-results-fallback 
             - alternative-results 
             - alternative-colours
        listPosition:
          type: number
          nullable: true
          description: >-
            The position of the selected element on the list. This property should be populated when reaching a PRODUCT_DETAILS page from a search list.
        pageType:
          type: string
          description: Type of page that user is accessing. Must be one of the list
          enum:
            - BACKSOON_SUBSCRIPTION_CONFIRMATION
            - BACKSOON_SUBSCRIPTION_ERROR
            - CART_LISTS
            - CATEGORY_VIEW
            - CHECKOUT_ADD_PERSONAL_DETAILS
            - CHECKOUT_BILL_DETAILS_GUEST
            - CHECKOUT_DROP_POINT_DETAIL
            - CHECKOUT_DROP_POINT_LIST
            - CHECKOUT_DROP_POINT_OPENNING_TIMES
            - CHECKOUT_EGUI_METHOD_SELECTION
            - CHECKOUT_HOME_ADDRESS_LIST
            - CHECKOUT_MODIFY_PERSONAL_DETAILS
            - CHECKOUT_ORDER_REVIEW
            - CHECKOUT_PAYMENT_DATA
            - CHECKOUT_PAYMENT_METHOD
            - CHECKOUT_PERSONAL_DETAILS_GUEST
            - CHECKOUT_SHIPPING_METHOD
            - CHECKOUT_SHIPPING_METHOD_HOME
            - CHECKOUT_SIGN_CHECK_SELECTION
            - CHECKOUT_STORE_COLLECTION_POINT_MAP
            - CHECKOUT_STORE_DETAIL
            - CHECKOUT_STORE_LIST
            - CHECKOUT_STORE_OPENNING_TIMES
            - COMING_SOON_CONFIRMATION
            - COMING_SOON_FORM
            - CONTACT
            - CONTACT_ON_DEMAND_CONFIRMATION
            - CONTACT_ONLINE
            - CONTACT_PAGE
            - CONTACT_PAGE_CONFIRMATION
            - CONTACT_STORE_COMPANY
            - DROPPOINT_LOCATOR
            - E_GIFTCARD
            - E_GIFTCARD_ACTIVATION
            - E_GIFTCARD_ACTIVATION_CHECKOUT
            - E_GIFTCARD_BALANCE
            - E_GIFTCARD_DATA_EMAIL
            - E_GIFTCARD_DATA_USER
            - E_GIFTCARD_SHIPPING_METHOD
            - E-GIFTCARD
            - EMPTY_WISHLIST
            - END_REGISTER_LITE
            - GIFT_BOX
            - GIFT_OPTIONS
            - GIFT_RECEIPT
            - GIFT_TICKET
            - GIFT_VIDEO
            - GIFTCARD
            - GIFTCARD_DETAILS
            - GUEST_ORDER_DETAIL
            - HELP_CENTER
            - HOME
            - LIST_RETURNS_VIEW
            - MOBILE_PHONE_VALIDATION
            - MY_ACCOUNT_ACCESS_DETAILS
            - MY_ACCOUNT_ACCOUNT_MENU
            - MY_ACCOUNT_ADD_PAYMENT_CARD
            - MY_ACCOUNT_ADDRESS_BOOK_ADD_NEW_ADDRESS
            - MY_ACCOUNT_ADDRESS_BOOK_ADDRESSES
            - MY_ACCOUNT_ADDRESS_BOOK_EDIT_ADDRESS
            - MY_ACCOUNT_ADDRESSES
            - MY_ACCOUNT_CHANGE_EMAIL
            - MY_ACCOUNT_CHANGE_PASSWORD
            - MY_ACCOUNT_EDIT_ADDRESS
            - MY_ACCOUNT_GIFT_CARDS
            - MY_ACCOUNT_NEW_ADDRESS
            - MY_ACCOUNT_NEW_AFFINITY_CARD
            - MY_ACCOUNT_NEW_BANK_CARD
            - MY_ACCOUNT_NEW_GIFT_CARD
            - MY_ACCOUNT_NEW_GIFT_CARD_CONFIRMATION
            - MY_ACCOUNT_NEWSLETTER
            - MY_ACCOUNT_ORDER_DETAILS
            - MY_ACCOUNT_ORDER_DETAILS_REFUND
            - MY_ACCOUNT_ORDER_EXCHANGEABLE_LIST
            - MY_ACCOUNT_ORDER_LIST
            - MY_ACCOUNT_ORDER_RETURNS_CHANGES_CONFIRMATION
            - MY_ACCOUNT_ORDER_RETURNS_EXCHANGES_ITEMS
            - MY_ACCOUNT_ORDER_RETURNS_EXCHANGES_ITEMS_SUMMARY
            - MY_ACCOUNT_ORDERS_LIST_IN_STORE
            - MY_ACCOUNT_ORDERS_LIST_ONLINE
            - MY_ACCOUNT_PAYMENT_CARDS
            - MY_ACCOUNT_PAYMENT_DATA
            - MY_ACCOUNT_PERSONAL_DETAILS
            - MY_ACCOUNT_PROFILE_MENU
            - MY_ACCOUNT_REGIONAL_PREFERENCES
            - MY_ACCOUNT_RETURNS_LIST
            - MY_ACCOUNT_SELECT_LANGUAGE
            - MY_ACCOUNT_SELECT_STORE
            - MY_ACCOUNT_SETTINGS_MENU
            - MY_ACCOUNT_STORES
            - MY_ACCOUNT_WALLET
            - NEWSLETTER_SUBSCRIBE_VIEW
            - NEWSLETTER_UNSUBSCRIBE_VIEW
            - PAGE_NOT_FOUND
            - PASSWORD_RECOVERY
            - PASSWORD_RECOVERY_RESET
            - PERSONAL_LIST
            - PICKUP_CONFIRMATION
            - PICKUP_SHOW_MORE_INFORMATION
            - PRODUCT_BUNDLE_DETAILS
            - PRODUCT_CUSTOMIZATION
            - PRODUCT_DETAILS
            - PRODUCT_INFO_JOIN_LIFE
            - PRODUCT_LIST
            - PRODUCT_SEARCH_RESULTS
            - PRODUCT_SEARCH_START
            - PURCHASE_ORDER_END
            - REPAY_DETAILS
            - RETURN_METHOD_ADDRESS_LIST
            - RETURN_NEW_ADDRESS
            - RETURN_REVIEW
            - RETURN_SHIPPING_BOX
            - RETURNABLE_PRODUCTS_SELECTOR
            - RETURNS_SELECT_METHOD
            - SAVE_FOR_LATER
            - SEARCH_REQUEST
            - SHOP_LOCATOR
            - SHOPPING_CART
            - SHOPPING_CART_EMPTY
            - USER_LOGON
            - USER_REGISTRATION
            - USER_SESSION_EXPIRED
            - VIRTUAL_TRY_ON
            - WHISLIST
            - WORLDWIDE
        storeId:
          type: number
          description: Ecommerce Online Store Id - References OnlineStore entity
      example:
        section: MAN
        categoryId: 2112866
        catentryId: 183602337
        displayLanguage: en
        pageType: PRODUCT_DETAILS
        list: search-results
        listPostion: 3
        origin: manual
        storeId: 10706
    add-to-cart-context:
      type: object
      required:
        - cartId
        - catentryId
        - list
        - pageType
        - skus
        - storeId
      properties:
        cartId:
          type: string
          description: Unique identifier of the cart that receives the add action
        catentryId:
          type: number
          description: Unique identifier of the product entry in a category
        section:
          type: string
          nullable: true
          description: Type of section that user is accessing. Must be one of the enum list
          enum: 
            - MAN 
            - WOMAN
            - KIDS
            - BEAUTY
        displayLanguage:
          type: string
          description: >-
            Locale style ISO-639 Language Code followed by ISO-3166 Country
            Code, examples: es_ES, es_MX
        list:
          type: string
          description: >-
            Which element of the user interface was used to add the item to the
            cart. Must be one of the enum list
          enum:
            - alternative-colours
            - alternative-results            
            - bundle
            - buy-again
            - buy-later
            - cross-custom-pdp
            - cross-custom-toast
            - cross-selling-cart
            - cross-selling-pdp
            - cross-selling-toast
            - cross-similar-coming-soon
            - cross-similar-pdp
            - cross-similar-search-results
            - grid
            - may-also-like
            - match-with
            - no-results-fallback            
            - save-for-later
            - search-results
            - size-list
            - size-recommender
            - suggested-product
            - suggested-search-results
            - wishlist
        origin:
          type: string
          nullable: true
          description: >-
            Which part of the interface was the origin of this user adding a
            product to the cart. Can be null if it is not possible to know the
            origin of the action. In case it is not null, must be one of enum list
          enum:
            - add-all
            - bundle
            - buy-later
            - edited
            - external
            - grid
            - increase
            - list
            - main-cta-pdp
            - match-with
            - may-also-like
            - mini-shopcart
            - scan
            - search
            - shopcart
            - size-recommender
            - virtual-try-on
            - wishlist
        listPosition:
          type: number
          nullable: true
          description: >-
            The position on the list of the element added to cart (only when adding from list)
        pageType:
          type: string
          description: >-
            Type of page that user from which the product is added. Must be one
            of the list
          enum:
            - BUY-AGAIN
            - CART_LISTS
            - CATEGORY_VIEW
            - E-GIFTCARD
            - EMPTY_WISHLIST
            - GIFTCARD
            - HOME
            - LOOKBOOK
            - PRODUCT_BUNDLE_DETAILS
            - PRODUCT_DETAILS
            - PRODUCT_LIST
            - PRODUCT_SEARCH_RESULTS
            - PRODUCT_SEARCH_START
            - SAVE_FOR_LATER
            - SHOPPING_CART
            - USER_LOGON
            - VIRTUAL_TRY_ON
        skus:
          type: array
          description: >-
            List of SKUs as strings including campaign. This is MOCACOTA. Example:
            ["0807324080005-I2021"]
          items:
            type: string
        storeId:
          type: number
          description: Ecommerce Online Store Id - References OnlineStore entity
      example:
        cartId: CCLRuXqH5dYiVRA+4fAVJP5qrzuECm0lNWLFgTziRdU=
        categoryId: 1886352
        catentryId: 108953403
        section: MAN
        displayLanguage: en
        list: search-results
        listPosition: 3
        origin: size-recommender
        pageType: PRODUCT_DETAILS
        skus:
          - 0651831080002-I2021
        storeId: 10706
    error-415:
      type: object
      description: >-
        The media format of the requested data is not supported by the server,
        so the server is rejecting the request
      properties:
        error_code:
          type: number
          description: HTTP Error code
          enum:
            - 415
        message:
          type: string
          enum:
            - HTTP 415 Unsupported Media Type
          description: Explanation of the error
    error-500:
      type: object
      description: The server has encountered a situation it does not know how to handle
      properties:
        error_code:
          type: number
          description: HTTP Error code
          enum:
            - 500
        message:
          type: string
          enum:
            - HTTP 500 Internal Server Error
          description: Explanation of the error
    error-406:
      type: object
      description: >-
        This response is sent when the web server, after performing
        server-driven content negotiation, doesn't find any content that
        conforms to the criteria given by the user agent.
      properties:
        error_code:
          type: number
          description: HTTP Error code
          enum:
            - 406
        message:
          type: string
          enum:
            - HTTP 406 Not Acceptable
          description: Explanation of the error
    ok-response:
      type: object
      properties:
        offsets:
          type: array
          description: N/A
          items:
            type: object
            properties:
              partition:
                type: number
                description: N/A
              offset:
                type: number
                description: N/A
              error_code:
                type: string
                description: N/A
              error:
                type: string
                description: N/A
        key_schema_id:
          type: number
          description: N/A
        value_schema_id:
          type: string
          description: N/A
  responses:
    ok:
      description: Inserted
      content:
        application/vnd.kafka.json.v2+json:
          schema:
            $ref: '#/components/schemas/ok-response'
    internal-error:
      description: Internal Server Error
      content:
        application/vnd.kafka.json.v2+json:
          schema:
            $ref: '#/components/schemas/error-500'
    unsupported-media-error:
      description: Unsupported Media Type
      content:
        application/vnd.kafka.json.v2+json:
          schema:
            $ref: '#/components/schemas/error-415'
    not-acceptable-error:
      description: Not Acceptable
      content:
        application/vnd.kafka.json.v2+json:
          schema:
            $ref: '#/components/schemas/error-406'
zenit-api-swagger-3
